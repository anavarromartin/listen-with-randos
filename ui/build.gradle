buildscript {
    repositories {
        maven {
            url('https://dl.bintray.com/kotlin/kotlin-eap')
        }
    }

    dependencies {
        classpath('org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.37')
    }

    ext {
        spotifyClientId = System.getenv('SPOTIFY_CLIENT_ID')
    }
}

apply plugin: 'kotlin2js'
apply plugin: 'kotlinx-serialization'
apply plugin: 'org.jetbrains.kotlin.frontend'

group = 'io.github.herbertfj.listenwithrandos'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url('https://kotlin.bintray.com/kotlin-js-wrappers')
    }
    maven {
        url('https://repo.spring.io/libs-release')
    }
    maven {
        url('https://dl.bintray.com/kotlin/kotlinx')
    }
}

dependencies {
    compile('org.jetbrains.kotlin:kotlin-stdlib-js')
    compile('org.jetbrains:kotlin-react:16.5.0-pre.54-kotlin-1.2.70')
    compile('org.jetbrains:kotlin-react-dom:16.5.0-pre.54-kotlin-1.2.70')
    compile('org.jetbrains:kotlin-react-redux:5.0.7-pre.54-kotlin-1.2.70')
    compile('org.jetbrains:kotlin-react-router-dom:4.3.1-pre.54-kotlin-1.2.70')
    testCompile('org.jetbrains.kotlin:kotlin-test-js')
}

compileKotlin2Js.kotlinOptions {
    moduleKind = 'commonjs'
    outputFile = "${project.buildDir}/web/build.js"
    metaInfo = true
    sourceMap = true
    main = 'call'
}

kotlinFrontend {
    downloadNodeJsVersion = '8.12.0'

    npm {
        dependency('react', '16.5.0')
        dependency('react-dom', '16.5.0')
        dependency('redux', '4.0.0')
        dependency('react-redux', '5.0.7')
        dependency('react-router-dom', '4.3.1')
        dependency('qs', '^6.5.2')

        devDependency('html-webpack-plugin', '^3.2.0')
        devDependency('sass-loader', '^7.1.0')
        devDependency('node-sass', '^4.9.3')
        devDependency('css-loader', '^1.0.0')
        devDependency('style-loader', '^0.23.0')
        devDependency('bootstrap', '^4.1.3')
    }

    webpackBundle {
        bundleName = 'main'
        contentPath = file('src/main/web')
        sourceMapEnabled = true
        host = 'localhost'
        port = 8088
    }

    define('spotifyClientId', spotifyClientId)
}
